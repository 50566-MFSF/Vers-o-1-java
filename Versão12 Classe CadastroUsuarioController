package trabJav;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Base64;

import javax.swing.JOptionPane;

public class CadastroUsuarioController {
	private String usuario;
	private String senha;
	private String nomeUsuario;

	public CadastroUsuarioController(String usuario, String senha, String nomeUsuario) {
		this.usuario = criptograr(usuario);
		this.senha = criptograr(senha);
		this.nomeUsuario = criptograr(nomeUsuario);
	}

	public void cadastrar() {
		criarArquivo();
		try {
			verificarCampoVazio(this.usuario);
			verificarCampoVazio(this.senha);
			verificarCampoVazio(this.nomeUsuario);
			escreverArq(this.usuario,this.senha,this.nomeUsuario);
			JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso!");
		} catch (CampoInvalido e) {
			JOptionPane.showMessageDialog(null, "HÃ¡ campos vazior em seu cadastro");
		}
	}

	public void escreverArq(String usuario, String senha, String nomeUsuario) {
		try {
			FileWriter fw = new FileWriter("cadastro.txt", true);
			BufferedWriter conexao = new BufferedWriter(fw);
			conexao.write("Nome do usuario: ");
			conexao.newLine();
			conexao.write(nomeUsuario);
			conexao.newLine();
			conexao.write("Usuario: ");
			conexao.newLine();
			conexao.write(usuario);
			conexao.newLine();
			conexao.write("Senha: ");
			conexao.newLine();
			conexao.write(senha);
			conexao.newLine();
			conexao.write("###---###---###---###---");
			conexao.newLine();
			conexao.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void verificarCampoVazio(String campo) throws CampoInvalido {
		if(campo.length() < 1) {
			throw new CampoInvalido("campoVazio");
		}
	}

	public void criarArquivo() {
		try {
			File myObj = new File("cadastro.txt");
			if (myObj.createNewFile()) {
				System.out.println("File created: " + myObj.getName());
			} else {
				System.out.println("File already exists.");
			}
		} catch (IOException e) {
			System.out.println("An error occurred.");
			e.printStackTrace();
		}
	}
	
	public String criptograr(String pValor) {
        return new String(Base64.getEncoder().encode(pValor.getBytes()));
    }
}
